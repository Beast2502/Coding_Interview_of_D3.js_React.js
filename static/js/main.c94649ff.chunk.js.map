{"version":3,"sources":["index.jsx"],"names":["Index","state","data","Data","draw","bind","this","node","select","bounds","getBoundingClientRect","w","width","h","height","xscale","scaleBand","domain","map","d","month","range","yscale","scaleLinear","selectAll","enter","append","attr","sales","bandwidth","style","console","log","className","ref","Component","ReactDom","render","document","getElementById"],"mappings":"kmBAQMA,E,kDACF,aAAc,IAAD,8BACT,gBACKC,MAAQ,CACXC,KAAMC,GAGR,EAAKC,KAAO,EAAKA,KAAKC,KAAV,gBANH,E,qDASX,WACIC,KAAKF,S,kBAGT,WACI,IAAMG,EAAOC,YAAOF,KAAKC,MACnBE,EAASF,EAAKA,OAAOG,wBACrBC,EAAIF,EAAOG,MACXC,EAAIJ,EAAOK,OACVZ,EAAQI,KAAKL,MAAbC,KAEDa,EAASC,cACfD,EAAOE,OAAOf,EAAKgB,KAAI,SAAAC,GAAC,OAAEA,EAAEC,UAC5BL,EAAOM,MAAM,CAAC,EAAEV,IAEhB,IAAMW,EAASC,cACfD,EAAOL,OAAO,CAAC,EAAE,MACjBK,EAAOD,MAAM,CAAC,EAAER,IAEJN,EAAKiB,UAAU,QAAQtB,KAAKA,GACpCuB,QAEHC,OAAO,QACPC,KAAK,KAAK,SAAAR,GAAC,OAAEJ,EAAOI,EAAEC,UACtBO,KAAK,KAAI,SAAAR,GAAC,OAAGN,EAAGS,EAAOH,EAAES,UACzBD,KAAK,QAASZ,EAAOc,aACrBF,KAAK,UAAU,SAAAR,GAAC,OAAGG,EAAOH,EAAES,UAC5BE,MAAM,SAAU,OAChBH,KAAK,OAAO,SAGbI,QAAQC,IAAI9B,K,oBAKlB,WAAU,IAAD,OACL,OACI,gCAEI,sBAAK+B,UAAU,UAAf,mBAEC3B,KAAKL,MAAMC,KAAKgB,KAAK,SAAAhB,GAClB,OACI,gCACKA,EAAKkB,MADV,OACqBlB,EAAK0B,eAKlC,sBAAKK,UAAU,UAAf,oBAEI,qBACIH,MAAO,CAAElB,MAAO,OAAQE,OAAQ,QAChCoB,IAAK,SAAA3B,GACW,EAAKA,KAAOA,e,GAjEhC4B,aA0EpBC,IAASC,OAAO,cAACrC,EAAD,IAASsC,SAASC,eAAe,U","file":"static/js/main.c94649ff.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport Data from './Data.json';\r\nimport {select, scaleBand ,scaleLinear} from 'd3';\r\nimport './App.css'\r\n\r\n\r\nclass Index extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n          data: Data,\r\n        \r\n        }\r\n        this.draw = this.draw.bind(this);\r\n      }\r\n\r\n      componentDidMount(){\r\n          this.draw();\r\n      }\r\n\r\n      draw(){\r\n          const node = select(this.node);\r\n          const bounds = node.node().getBoundingClientRect();\r\n          const w = bounds.width;\r\n          const h = bounds.height;\r\n          const {data} = this.state;\r\n\r\n          const xscale = scaleBand();\r\n          xscale.domain(data.map(d=>d.month))\r\n          xscale.range([0,w]);\r\n\r\n          const yscale = scaleLinear();\r\n          yscale.domain([0,100]);\r\n          yscale.range([0,h]);\r\n\r\n          const upd = node.selectAll('rect').data(data);\r\n          upd.enter()\r\n         \r\n          .append('rect')\r\n          .attr('x', d=>xscale(d.month))\r\n          .attr('y',d=> h -yscale(d.sales))\r\n          .attr('width', xscale.bandwidth())\r\n          .attr('height', d=> yscale(d.sales) )\r\n          .style(\"stroke\", \"red\")\r\n          .attr('fill','green')\r\n          \r\n\r\n          console.log(data)\r\n\r\n          \r\n\r\n      }\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n                <div className='gapping'>\r\n                \"Data\"\r\n                {this.state.data.map( data => {\r\n                    return(\r\n                        <div>\r\n                            {data.month} => {data.sales}\r\n                        </div>\r\n                    )\r\n                })}\r\n              </div>\r\n                <div className=\"gapping\">\r\n                    \"Chart\"\r\n                    <svg\r\n                        style={{ width: '100%', height: '100%' }}\r\n                        ref={node => {\r\n                                        this.node = node;\r\n                                    }}\r\n                      >\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nReactDom.render(<Index/>,document.getElementById('root'))\r\n"],"sourceRoot":""}